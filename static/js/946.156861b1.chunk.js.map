{"version":3,"file":"static/js/946.156861b1.chunk.js","mappings":"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","sources":["webpack://goit-react-hw-08-phonebook/./src/components/Pages/style.module.css?6dd0","webpack://goit-react-hw-08-phonebook/./src/components/ContactForm/style.module.css?a2ce","redux/selectors.js","components/ContactForm/contactForm.js","webpack://goit-react-hw-08-phonebook/./src/components/ContactFilter/style.module.css?108a","components/ContactFilter/contactFilter.js","webpack://goit-react-hw-08-phonebook/./src/components/ContactList/style.module.css?41b7","webpack://goit-react-hw-08-phonebook/./src/components/ContactList/ContactItem/style.module.css?2c81","components/ContactList/ContactItem/contactItem.js","components/ContactList/contactList.js","components/Pages/Phonebook.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"style_wrapper__xRTQg\"};","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"style_form__YrO37\",\"label\":\"style_label__zVOXO\",\"input\":\"style_input__Esgc7\",\"btn\":\"style_btn__Ox8LF\"};","export const selectContacts = ({contacts})=> contacts;\nexport const selectFilter = ({filter}) => filter;\n\n\nexport const selectFilteredContacts = ({contacts, filter}) => {\n    if (!filter) {\n        return contacts.items;\n    }\n    const normalizedFilter = filter.toLowerCase();\n    return contacts.items.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter)\n    );\n  };","import React, { useState} from 'react';\nimport styles from './style.module.css';\n\n//redux's hooks import\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { selectContacts } from 'redux/selectors';\nimport { addContact } from 'redux/operations';\n\n\nexport const ContactForm = () => {\n\n\nconst [name, setName] = useState('');\nconst [number, setNumber] = useState('');\n\nconst dispatch = useDispatch();\n\nconst handleChangeName = event => {\n  setName(event.currentTarget.value);\n};\n\nconst handleChangeNumber = event => {\n  setNumber(event.currentTarget.value);\n};\n\nconst contacts = useSelector(selectContacts);\n\nconst isContactExist = contacts.items.find(\n  contact => contact.name.toLowerCase() === name.toLowerCase()\n);\n\nconst handleSubmit = event => {\n  event.preventDefault();\n  if (isContactExist) {\n    return alert(`${name} is already in contacts`);\n  }\n  \n  const data = {\n    name,\n    number,\n  };\n  dispatch(addContact(data));\n  resetForm();\n};\n\nconst resetForm = () => {\n  setName('');\n  setNumber('');\n};\n\n  return (\n    <form className={styles.form} onSubmit={handleSubmit}>\n      <label className={styles.label}>\n        Name\n        <input\n          className={styles.input}\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          value={name}\n          onChange={handleChangeName}\n        />\n      </label>\n      <label className={styles.label}>\n        Number\n        <input\n          className={styles.input}\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          value={number}\n          onChange={handleChangeNumber}\n        />\n      </label>\n      <button type=\"submit\" className={styles.btn}>\n        Add contact\n      </button>\n    </form>\n  );\n\n}","// extracted by mini-css-extract-plugin\nexport default {\"text\":\"style_text__0L4k9\",\"input\":\"style_input__KO9gi\"};","\nimport styles from './style.module.css';\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { selectFilter } from 'redux/selectors';\n\n//action import\nimport { setContactsFilter } from 'redux/filterSlice';\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(selectFilter);\n  const handleFilterChange = event => {\n    dispatch(setContactsFilter(event.currentTarget.value));};\n\n  return (\n    <div>\n      <label className={styles.text}>\n        Find contacts by name\n        <input\n          className={styles.input}\n          type=\"text\"\n          name=\"filter\"\n          value={filter}\n          onChange={handleFilterChange}\n          placeholder=\"Please enter name for search\"\n        />\n      </label>\n    </div>\n  );\n};\n\nexport default Filter;","// extracted by mini-css-extract-plugin\nexport default {\"contactsList\":\"style_contactsList__VEa+c\"};","// extracted by mini-css-extract-plugin\nexport default {\"listItem\":\"style_listItem__Ubala\",\"btn\":\"style_btn__OK2S9\"};","import PropTypes from 'prop-types';\nimport styles from './style.module.css';\n\n// redux's hook import\nimport { useDispatch } from \"react-redux\";\n\n\nimport { deleteContact } from 'redux/operations';\n\nconst ContactItem = ({id, name, number}) => {\n\n  const dispatch = useDispatch();\n\n  const handleDelete = () => {\n    dispatch(deleteContact(id));\n  };\n            return (\n              <li className={styles.listItem} id={id}>\n                <span>{name}: </span>\n                <span>{number}</span>\n                <button\n                  type=\"button\"\n                  className={styles.btn}\n                  onClick={handleDelete}\n                >\n                  Delete\n                </button>\n              </li>\n            );\n          }\n\nContactItem.propTypes = {\n\n    id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n};\n\nexport default ContactItem;","import { useEffect } from 'react';\nimport { useDispatch} from 'react-redux';\nimport { fetchContacts } from 'redux/operations';\n\nimport styles from './style.module.css';\nimport ContactItem from './ContactItem/contactItem';\nimport { useSelector } from 'react-redux';\nimport { selectContacts, selectFilteredContacts } from 'redux/selectors';\n\n\nconst ContactList = () => {\n\n  const dispatch = useDispatch();\n  // Получаем части состояния\n  const { items, isLoading, error } = useSelector(selectContacts);\n\n  // Вызываем операцию\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const getVisibleContacts = useSelector(selectFilteredContacts);\n\n  return (\n    <div>\n      {isLoading && <p>Loading tasks...</p>}\n      {error && <p><strong>We've got this error: </strong>{error}</p>}\n      {items.length>0 && <ul className={styles.contactsList}>\n        {getVisibleContacts.map(({ id, name, number }) => {\n          return (\n            <ContactItem \n             key={id}\n             id={id}\n             name={name} \n             number={number}\n             />\n          );\n        })}\n      </ul>\n      }\n      \n    </div>\n  );\n};\n\nexport default ContactList;","import styles from './style.module.css';\nimport { ContactForm } from 'components/ContactForm/contactForm';\nimport Filter from '../ContactFilter/contactFilter';\nimport ContactList from '../ContactList/contactList';\n\nconst Phonebook = () => {\n  return (\n    <div className={styles.wrapper}>\n      <h1>Phonebook/Contacts</h1>\n      <Filter />\n      <ContactList />\n      <h2>Add Contact to the Phonebook</h2>\n      <ContactForm />\n    </div>\n  );\n};\n\nexport default Phonebook;\n"],"names":["selectContacts","contacts","selectFilter","filter","selectFilteredContacts","items","normalizedFilter","toLowerCase","contact","name","includes","ContactForm","useState","setName","number","setNumber","dispatch","useDispatch","isContactExist","useSelector","find","resetForm","className","styles","onSubmit","event","preventDefault","alert","data","addContact","type","pattern","title","required","value","onChange","currentTarget","setContactsFilter","placeholder","id","onClick","deleteContact","isLoading","error","useEffect","fetchContacts","getVisibleContacts","length","map"],"sourceRoot":""}